<!DOCTYPE html>
<html>
  <head>
    <title>index.html</title>
	
    <meta name="keywords" content="keyword1,keyword2,keyword3">
    <meta name="description" content="this is my page">
    <meta name="content-type" content="text/html; charset=UTF-8">
    
    <!--<link rel="stylesheet" type="text/css" href="./styles.css">-->

  </head>
  
  <body>
 
<h1><font color="#0055ff">Java基础</font></h1>&nbsp;<br>
  
<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day01.htm"><h2><font color="#FF0000">day01</font></h2></a>
<p>
<pre><font size="5">
第一集  计算机基础和常用DOS命令. 
第二集  java概述和开发环境配置.</font></pre>
</p>    
&nbsp;<br>

<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day02.htm"><h2><font color="#FF0000">day02</font></h2></a>
<p>
<pre><font size="5">关键字.   标识符.   注释.   常量.   进制.   其他进制到十进制的转化.   十进制到其他进制的转化.   快速转换.   原码，反码和补码.   变量.   数据类型.   数据类型补充：</font></pre>
</p>    
&nbsp;<br>

<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day03.htm"><h2><font color="#FF0000">day03</font></h2></a>
<p>
<pre><font size="5">
第一集   运算符.   1、算术运算符.   2、赋值运算符.   3、关系运算符.   4、逻辑运算符.   5、位运算符.   6、条件运算符（三目运算符）.   7、键盘输入数据 <br>
第二集   流程控制语句.   1、顺序结构.   2、选择结构.   3、循环结构</font></pre>
</p>    
&nbsp;<br>

<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day04.htm"><h2><font color="#FF0000">day04</font></h2></a>
<p>
<pre><font size="5">
第一集   流程控制语句.   1、switch语句.   2、for循环语句.   3、while循环.   4、do while循环.   5、三种循环语句的区别<br>
第二集   跳转控制语句.   1、break：中断之义.   2、continue：继续之义.   3、reture语句：返回之义</font></pre>
</p>    
&nbsp;<br>

<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day05.htm"><h2><font color="#FF0000">day05</font></h2></a>
<p>
<pre><font size="5">
第一集   方法	

案例1：键盘录入两个数据，返回两个数中的较大值	

案例2：比较出三个数的最大值	

案例3：输出指定行数和列数的星形图案	

案例4：键盘录入一个数据n(1<=n<=9)，输出对应的nn乘法表
	
方法重载	

第二集    数组	

1、动态初始化：只指定长度，由系统给出初始化值	

2、静态初始化：给出初始化值，由系统决定长度	

3、数组操作的两个小问题

4、	
案例1：遍历数组	

案例2、获取数组的最值（最大值或者最小值）	

案例3、数组元素逆序（两种方式）	

案例4、数组查表法(根据键盘录入索引,查找对应星期)	

案例5、数组元素查找(查找指定元素第一次在数组中出现的索引)	
</font></pre>
</p>    
&nbsp;<br>

<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day06.htm"><h2><font color="#FF0000">day06</font></h2></a>
<p>
<pre><font size="5">
第一集  二维数组	

格式1（动态初始化）

格式2（动态初始化）

格式3（静态初始化）

案例1：二维数组的遍历	

案例2：二维数组求和	

案例3：打印杨辉三角形(行数可以键盘录入)	

思考题

数组综合案例（加密问题）【把一个整数拆开放入数组，再把数组合为String】

第二集    面向对象	

面向对象和面向过程：	

面向过程和面向对象思想案例

面向对象特征

类和对象

案例
</font></pre>
</p>    
&nbsp;<br>

<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day07.htm"><h2><font color="#FF0000">day07</font></h2></a>
<p>
<pre><font size="5">
第一集     面向对象

成员变量和局部变量的区别

形式参数的问题

匿名对象：就是没有名字的对象，如：new Student()

封装：使用private修饰成员变量或者成员方法就叫做封装

private关键字

封装和private的应用

this关键字  代表由它所在的类创建的对象

案例：请把手机类写成一个标准类，然后创建对象测试功能

构造方法

构造方法的注意事项

类的成员方法

案例1：定义一个长方形类,定义求周长和面积的方法，然后定义一个测试类Test2，进行测试

案例2：定义一个员工类,自己分析出几个成员，然后给出成员变量，构造方法，getXxx()/setXxx()方法，以及一个显示所有成员信息的方法。并测试

案例3：定义一个类MyMath,提供基本的加减乘除功能，然后进行测试

static关键字  可以修饰成员变量，还可以修饰成员方法

静态变量和成员变量的区别

Main方法的格式
</font></pre>
</p>    
&nbsp;<br>

<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day08.htm"><h2><font color="#FF0000">day08</font></h2></a>
<p>
<pre><font size="5">
第一集  static的另一种用法

第二集  帮助文档的制作和使用

案例1

案例2

第三集     代码块

案例：写程序的执行结果

第四集  继承

继承中父类的成员变量和子类的成员变量的关系

继承中父类的构造方法和子类的构造方法的关系

案例1

案例2

案例3

继承中父类的成员方法和子类的成员方法之间的关系

案例1：方法重写

案例2：方法重写的注意事项

两个面试题：
1：方法重写和方法重载的区别?方法重载能改变返回值类型吗?

2：this关键字和super关键字分别代表什么?以及他们各自的使用场景和作用。

案例3

案例4：修改案例3

案例5：猫狗案例讲解
</font></pre>
</p>    
&nbsp;<br>

<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day09.htm"><h2><font color="#FF0000">day09</font></h2></a>
<p>
<pre><font size="5">
第一集    final关键字

第二集    多态

第三集    抽象类

第四集    接口
</font></pre>
</p>    
&nbsp;<br>

<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day10.htm"><h2><font color="#FF0000">day10</font></h2></a>
<p>
<pre><font size="5">
第一集   教练和运动员案例

第二集   形式参数和返回值问题

第三集   包

第四集   权限修饰符

第五集   内部类
</font></pre>
</p>    
&nbsp;<br>

<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day11.htm"><h2><font color="#FF0000">day11</font></h2></a>
<p>
<pre><font size="5">
第一集   Eclipse

第二集   常用类----- Object类
</font></pre>
</p>    
&nbsp;<br>

<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day12.htm"><h2><font color="#FF0000">day12</font></h2></a>
<p>
<pre><font size="5">
第一集    常用类----Scanner类

第二集    常用类----String类

A:判断功能
练习:模拟登录,给三次机会,并提示还有几次。

B:获取功能
练习一：遍历获取字符串中的每一个字符
练习二：统计一个字符串中大写字母字符，小写字母字符，数字字符出现的次数。(不考虑其他字符)

C:转换功能
练习：把一个字符串的首字母转成大写，其余为小写。(只考虑英文大小写字母字符)

D:其他功能
练习一：把数组中的数据按照指定格式拼接成一个字符串
练习二：把练习一用方法实现
练习三：字符串反转
练习四：统计大串中小串出现的次数
练习五：对练习四代码优化
</font></pre>
</p>    
&nbsp;<br>

<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day13.htm"><h2><font color="#FF0000">day13</font></h2></a>
<p>
<pre><font size="5">
第一集   常用类----StringBuffer类
A:添加功能
B:删除功能
C:替换功能
D:反转功能
E:截取功能(注意这个方法的返回值不再是StringBuffer而是String)
练习：
A:String和StringBuffer相互转换
B:字符串的拼接
C:把字符串反转
D:判断一个字符串是否对称

第二集    数组排序和查询
(1)排序
A:冒泡排序
B:选择排序
(2)查找
A:基本查找：针对数组无序的情况
B:二分查找(折半查找)：针对数组有序的情况

第三集   常用类----Arrays类

第四集   常用类----Integer类

第五集   常用类----Character类
统计一个字符串中大写字母字符，小写字母字符，数字字符出现的次数。(不考虑其他字符)
</font></pre>
</p>    
&nbsp;<br>


<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day14.htm"><h2><font color="#FF0000">day14</font></h2></a>
<p>
<pre><font size="5">
第一集 正则表达式	
引入：	
1:正则表达式（在类Pattern中）	
A:字符	
B:字符类	
C:预定义字符类	
D:边界匹配器	
E:数量词	
A:判断功能	
B:分割功能	
C:替换功能	
D:获取功能	

第二集   常见类----Math类	
练习：请设计一个方法，可以实现获取任意范围内的随机数。	

第三集   常见类----Random类	

第四集   常见类----System类	

第五集   常见类----BigInteger类	

第六集   常见类----BigDecimal类	

第七集   常见类----Date/DateFormat类	
案例一：这是日期和字符串相互转换的工具类	
案例二：计算你来这个世界多少天了	

第八集   常见类----Calendar类	
案例：计算任意一年的2月份有多少天?	
</font></pre>
</p>    
&nbsp;<br>

<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day15.htm"><h2><font color="#FF0000">day15</font></h2></a>
<p>
<pre><font size="5">
第一集   对象数组	

第二集   Collection集合	
(1)集合的由来	

(2)集合和数组的区别?	

(3)集合的继承体系结构	

(4)Collection的功能概述	
A:添加功能	
B:删除功能	
C:判断功能	
D:获取功能	
E:长度功能	
F:交集	
G:把集合转为对象数组	

(5)Collection集合的遍历	
A:把集合转为对象数组	
B:迭代器(集合专用方式)	

(6)迭代器	

(7)Collection集合的案例(遍历方式：迭代器)	
A:存储字符串并遍历	
B:存储自定义对象并遍历	

第三集   List集合	
(1)List是Collection的子接口	
(2)List的特有功能：	
(3)List集合的特有遍历功能	
(4)列表迭代器（ListIterator）的特有功能

第四集   数据结构	
A:栈：先进后出	
B:队列：先进先出	
C:数组：查询快，增删慢	
D:链表：查询慢，增删快（照着画一遍）	

第五集   List的子类	
List的子类特点(面试题)	
</font></pre>
</p>    
&nbsp;<br>

<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day16.htm"><h2><font color="#FF0000">day16</font></h2></a>
<p>
<pre><font size="5">
第一集  List的三个子类
	
(1)List的子类特点	

(2)ArrayList
a:ArrayList存储字符串并遍历	
b:ArrayList存储自定义对象并遍历	

(3)Vector	

(4)LinkedList	

(5)案例：	
A:去除集合中多个重复的字符串元素：如果字符串的内容相同即	
为重复元素	
B:去除集合中多个重复的自定义对象元素：如果自定义对象的成员变量值都相同，即为重复元素	
C:用LinkedList类模拟一个栈数据结构的集合类，并测试。
	
第二集  泛型	
引入：	

(1)泛型概述	

(2)格式：	

(3)好处：	
A:List中放入字符串并遍历的情况：	
B:List中放入自定义对象并遍历的情况：	

(4)泛型的前世今生	
A:泛型的由来	
B:泛型类	
C:泛型方法	
D:泛型接口	
E:泛型高级：通配符	

第三集  增强for循环	
案例一： ArrayList存储字符串并遍历。要求加入泛型，并用增强for遍历。	
案例二：	

第四集  静态导入	

第五集  可变参数	

第六集  练习	
A:集合的嵌套遍历	
B:产生10个1-20之间的随机数，要求随机数不能重复	
C:键盘录入多个数据，以0结束，并在控制台输出最大值	
</font></pre>
</p>    
&nbsp;<br>

<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day17.htm"><h2><font color="#FF0000">day17</font></h2></a>
<p>
<pre><font size="5">
第一集  集合对象的toString方法	

第二集  登录注册案例	

第三集  set集合	

第四集  HashSet集合	
A:HashSet存储字符串并遍历	
B:为什么HashSet集合能保证唯一性呢？	
C:如何保证元素唯一性的呢?	
D:HashSet存储自定义对象并遍历，并保证元素的唯一性(如果两个对象的成员变量值相同即为同一个元素)	
案例：HashSet集合存储自定义对象并遍历并保证唯一。如果对象的成员变量值相同即同一个对象	
E:LinkedHashSet:	
F:哈希表：	

第五集  TreeSet集合	
A:TreeSet基础	
B:自然排序	
案例1：TreeSet存储自定义对象并保证排序和唯一。	
案例2：TreeSet存储自定义对象并保证元素排序和唯一	
C:比较器排序	
D: TreeSet集合保证元素唯一性和排序的原理总结	
A:编写一个程序，获取10个1至20的随机数，要求随机数不能重复。	
B:键盘录入5个学生信息(姓名,语文成绩,数学成绩,英语成绩),按照总分从高到低输出到控制台	

第六集  Collection集合总结	
</font></pre>
</p>    
&nbsp;<br>


<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day18.htm"><h2><font color="#FF0000">day18</font></h2></a>
<p>
<pre><font size="5">
第一集     Map	
(1)映射到值的对象	
(2)Map和Collection的区别	
(3)Map接口功能概述	
1:添加功能	
2:删除功能	
3:判断功能	
4:长度功能	
5:获取功能	
(4)Map集合的遍历	
A:根据键找值	
B:根据键值对对象找键和值	

第二集    HashMap	
HashMap集合的练习	
A:HashMap &lt;String,String &gt;	
B:HashMap &lt;Integer,String &gt;	
C:HashMap &lt;String,Student &gt;	
D:HashMap &lt;Student,String &gt;

第三集    LinkedHashMap	

第四集   TreeMap	
TreeMap集合的练习	
A:TreeMap &lt;String,String &gt;	
B:TreeMap &lt;Student,String &gt;	
案例	

第五集   集合的嵌套遍历	
a:HashMap嵌套HashMap	
b:HashMap嵌套ArrayList	
c:ArrayList嵌套HashMap	

第六集   Collections类	
(1) Collections	
(2)面试题：Collection和Collections的区别	
(3)常见的几个小方法：	
(4)案例	
A:ArrayList集合存储自定义对象的排序（自然排序）。	
B:ArrayList集合存储自定义对象的排序（比较器排序）。	
C：模拟斗地主洗牌和发牌	

第七集    集合总结	
1:集合	
2:到底使用那种集合	
3:集合的常见方法及遍历方式	
</font></pre>
</p>    
&nbsp;<br>


<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day19.htm"><h2><font color="#FF0000">day19</font></h2></a>
<p>
<pre><font size="5">
第一集    异常	
(1)程序出现不正常的情况。	
(2)异常的体系	
(3)异常的处理：
案例一：一个异常的处理	
案例二：多个异常的处理	
案例三：JDK7出现的新的异常处理方案

第二集    File类	
(1)File:代表文件路径	
(2)构造方法	
(3)File类的功能	
A:创建功能	
B:删除功能	
C:重命名功能	
D:判断功能	
E:获取功能	
F:高级获取功能	
案例：判断d盘目录下是否有后缀名为.jpg的文件，如果有，就输出此文件名称	
G:过滤器功能	
案例：	
</font></pre>
</p>    
&nbsp;<br>


<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day20.htm"><h2><font color="#FF0000">day20</font></h2></a>
<p>
<pre><font size="5">
第一集   递归	
(1)方法体中调用方法本身的现象	
(2)递归的注意事项；	
(3) 递归的案例：
A:求5的阶乘，其中：5!  =  1*2*3*4*5  =  5*4!	
B:斐波那契数列规则如下：1,1,2,3,5,8...求第20个斐波那契数列是多少？	
C:把E:\JavaSE目录下所有的以java结尾的文件的绝对路径打印出来。	
D:删除带内容的目录demo	

第二集   IO流	
(1)用于在设备间进行数据传输的操作	
(2)分类：
	
第三集   OutputStream的实现类:FileOutputStream	
A:FileOutputStream操作步骤	
需求：往文本文件中输入"hello,io"	
B:三个步骤的代码体现：	
C:实现数据的追加写入和数据的换行	
D:加入异常处理的字节输出流操作	

第四集   InputStream的实现类:FileInputStream	
A:字节输入流操作步骤：	
B:代码体现：	
C:计算机是如何识别何时该把两个字节转换为一个中文的?	
(5)案例：两种实现	
A:复制文本文件(使用字节流)	
案例一：一次一个字节	
案例二：一次一个字节	
案例三：一次一个字节数组	
B:复制图片需求：把e:\\林青霞.jpg内容复制到当前项目目录下的mn.jpg中	
C:复制视频需求：	
案例一：一次一个字节	
案例二：一次一个字节数组	

第五集   BufferedOutputStream和BufferedInputStream	
A:BufferedOutputStream	
B:BufferedInputStream
案例：复制视频(四种实现)	
</font></pre>
</p>    
&nbsp;<br>


<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day21.htm"><h2><font color="#FF0000">day21</font></h2></a>
<p>
<pre><font size="5">
第一集   引入	

第二集   编码表	
A: 概念	
B:常见的编码表	
C:字符串中的编码问题	
D:IO流中的编码问题	
1、转换流:OutputStreamWriter	
2、转换流：InputStreamReader	

第三集   转换流	
OutputStreamWriter的方法：	
面试题：close()和flush()的区别?	
InputStreamReader的方法：	
案例一： 需求：把当前项目下的a.txt内容复制到当前项目下的b.txt中 （转换流实现）	
案例二
案例三：需求：把c:\\a.txt内容复制到d:\\b.txt中	

第四集   字符流	
字符流的继承体系	
案例一：需求：把当前项目下的a.txt内容复制到当前项目下的b.txt中	
案例二：特殊方法：	
案例三：使用特殊功能把当前项目下的a.txt内容复制到当前项目下的b.txt中	
IO流小结	

第五集   IO流练习	
案例一:复制文本文件	
案例二:复制图片	
案例三:把ArrayList集合中的字符串数据存储到文本文件	
案例四:从文本文件中读取数据(每一行为一个字符串数据)到集合中，并遍历集合	
案例五：在一个文本文件中存储了几个名字，请写一个程序实现随机获取一个名字。	
案例六:复制单级文件夹，把一个文件夹内的所有文件(无文件夹)复制到另一个文件夹中去	
案例七:复制指定目录下的指定文件，并修改其后缀名。如下所示：	
案例八:复制多级文件夹	
案例九：:键盘录入5个学生信息(姓名,语文成绩,数学成绩,英语成绩),按照总分从高到低的顺序存入文本文件中	
案例十： 已知s.txt文件中有一个字符串：“hcexfgijkamdnoqrzstuvwybpl”。请编写程序读取数据内容，把数据排序后写入ss.txt中。	
案例十一：:LineNumberReader的特有功能	
</font></pre>
</p>    
&nbsp;<br>

<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day22.htm"><h2><font color="#FF0000">day22</font></h2></a>
<p>
<pre><font size="5">
第一集  登录注册IO版	

第二集  基本类型数据操作流	

第三集  内存操作流	

第四集  打印流	

第五集   标准输入输出流	

第六集   随机访问流	

第七集    合并流	

第八集    序列化流	

第九集    Properties	
(1)Properties概念	
(2)特有功能	
(3)Properties和IO流相结合的方法	
(4)案例：	
案例一：	
案例二：
</font></pre>
</p>    
&nbsp;<br>


<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day23.htm"><h2><font color="#FF0000">day23</font></h2></a>
<p>
<pre><font size="5">
第一集  概述	
1:引入
2:什么是进程?	
3:多进程的意义?	
4:什么是线程?	
5:多线程的意义?	
6:总结
7:Java程序的运行过程

第二集  继承自Thread类的多线程实现

第三集  线程的名字	

第四集  线程调度和优先级	

第五集  线程控制	
A:线程休眠：	
B:加入线程	
C:礼让线程	
D:守护线程	
E:终止线程

第六集  线程生命周期	

第七集  实现接口Runnable的多线程实现	

第八集  卖票案例及出现的问题	

第九集  线程安全问题及解决方法	
(1)程序会出现线程安全问题的前提：	
(2)同步解决线程安全问题	
(3)线程安全的类	
</font></pre>
</p>    
&nbsp;<br>

<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day24.htm"><h2><font color="#FF0000">day24</font></h2></a>
<p>
<pre><font size="5">
第一集  Lock锁	

第二集  死锁问题	

第三集  线程间通信	

第四集  线程状态转换图	

第五集  线程组

第六集  线程池	

第七集  实现接口Callable的多线程实现	

第八集  匿名内部类方案的多线程实现	

第九集  定时器	

第十集  多线程常见面试题	

第十一集  设计模式	
</font></pre>
</p>    
&nbsp;<br>

<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day25.htm"><h2><font color="#FF0000">day25</font></h2></a>
<p>
<pre><font size="5">
第一集  GUI	
(1)概述	
(2)GUI所在的两个包：	
(3)GUI的继承体系	
案例一：	
案例二：	

第二集    事件监听机制	

第三集  适配器模式	

第四集  GUI案例	
A:窗体中添加按钮并对按钮添加事件案例。	
B:如图：把文本框里面的数据转移到文本域	
C:更改窗体背景色	
D:设置文本框只能输入数字字符	
E:一级菜单	
F:多级菜单	
</font></pre>
</p>    
&nbsp;<br>

<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day26.htm"><h2><font color="#FF0000">day26</font></h2></a>
<p>
<pre><font size="5">
第一集  网络编程概述	
(1)网络编程：	
(2)网络编程模型：	
(3)网络编程的三要素	
案例一：	
(4)Socket机制	

第二集     UDP协议发送和接收数据	
案例一：从键盘录入数据进行发送，如果输入的是886那么发送端就结束数据输入。	
案例二：通过多线程实现在一个窗口发送和接收数据	

第三集     TCP协议发送和接收数据	
案例一：发送端键盘录入接收端控制台输出	
案例二:发送端键盘录入接收端写到文本文件	
案例三:发送端读取文本文件接收端控制台输出	
案例四:发送端读取文本文件接收端写到文本文件(相当于文件发送)	
案例五：改进案例四，增加反馈功能	
案例六：上传图片	
案例七:多线程改进上传文件(模拟多人上传文件)	
</font></pre>
</p>    
&nbsp;<br>


<a href="http://htmlpreview.github.io/?https://github.com/qzyw525942/MyRepository/blob/master/java%E5%9F%BA%E7%A1%80/day27.htm"><h2><font color="#FF0000">day27</font></h2></a>
<p>
<pre><font size="5">
第一集  反射	
(1)类的加载	
(2)反射	
(3)反射的使用（以下使用的类都是上面的Person类）	
A:通过反射获取构造方法并使用	
1、获得无参构造方法：public Person(){}	
2、获得带三个参数的构造方法：public Person(String name, int age, String address){}	
3、获得私有构造方法：private Person(String name){}	
B:通过反射获取成员变量并使用	
C:通过反射获取成员方法并使用
(4)反射案例	
A:通过配置文件运行类中的方法	
B:给出ArrayList<Integer>的一个对象，请在这个集合中添加一个字符串数据	
C:通过反射给任意的一个对象的任意的属性赋值为指定的值	

第二集  设计模式	
(1)装饰设计模式	
(2)模版设计模式：就是只定义一个算法的框架，而将具体的算法交给子类去实现。	

第三集  JDK新特性	
A、枚举基础	
B、枚举中的方法	
</font></pre>
</p>    
&nbsp;<br>


</body>
</html>
